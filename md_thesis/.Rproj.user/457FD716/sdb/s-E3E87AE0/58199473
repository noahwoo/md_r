{
    "collab_server" : "",
    "contents" : "require(xlsx)\nrequire(ROCR)\nlibrary(pROC)\nlibrary(car)\nlibrary(psych)\n# boxplot with ggplot2\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(nortest)\n\nroc_suite <- function(target, pred) {\n  roc   <- prediction(pred, target)\n  auc   <- performance(roc, \"auc\")@y.values[[1]]\n  perf  <- performance(roc, \"sens\", \"spec\")\n  perfv <- perf@x.values[[1]] + perf@y.values[[1]]\n  ix    <- which.max(perfv)\n  cutoff <- perf@alpha.values[[1]][ix]\n  sens  <- perf@y.values[[1]][ix] \n  spec  <- perf@x.values[[1]][ix]\n  \n  nppv  <- performance(roc, \"ppv\", \"npv\")\n  npv   <- nppv@x.values[[1]][ix]\n  ppv   <- nppv@y.values[[1]][ix]\n  \n  r0 <- roc(target, rep(0, length(target)))\n  r1 <- roc(target, pred, direction=\"<\", smooth = FALSE)\n  test <- roc.test(r0, r1) # significant test\n  ci   <- ci.auc(r1, method = c(\"bootstrap\"))\n  list(auc=auc, ix=ix, sens=sens, spec=spec, \n       npv=npv, ppv=ppv, youden=sens+spec-1, \n       cutoff=cutoff, pvalue=test$p.value,\n       ci_lb=ci[1][[1]], ci_ub=ci[3][[1]], \n       ptar=as.factor(pred>cutoff))\n}\n\n\n# clin-neu-med \nhn_raw <- read.xlsx(\"/Users/wujianmin/Documents/personal/lp/thesis/HN20180112-new.xlsx\", \n                    sheetName = \"HN2-retest_pred\")\nnames(hn_raw)\nhn_raw <- hn_raw[1:29, ]\ncols <- c(\"pathscore\",  \"CellMo\", \"CellJiang\", \"SUVav\", \n          \"SUVmax\", \"ADCmin\", \"ADCav\", \"IAUGCAv\", \"KtransAv\", \"VeAv\", \"KepAv\")\ncols2 <- c(\"pathscore\",  \"CellMo\", \"CellJiang\", \"SUVmean\", \n           \"SUVmax\", \"ADCmin\", \"ADCmean\", \"IAUGC\", \"Ktrans\", \"Ve\", \"Kep\")\ncols3 <- c(\"pathscore\", \"CellMo\", \"CellJiang\", \"SUVmean\", \n           \"SUVmax\", \"ADCmin\", \"ADCmean\", \"IAUGCmean\", \"KtransMean\", \"VeMean\", \"KepMean\")\nhn_c <- hn_raw[, cols] # project column\n\n# cleaning new labels\nhn_c <- hn_c[!is.na(hn_c$SUVav), ]\nhn_c <- hn_c[!is.na(hn_c$ADCav), ]\nhn_c <- hn_c[!is.na(hn_c$CellMo), ]\n# hn_c <- hn_c[!is.na(hn_cm$KtransMean), ] # optional\n\nhn_cm <- hn_c\nnames(hn_cm) <- cols3\nhn_cm[\"2\", \"CellMo\"] <- 2 \nhn_cm[\"21\", \"CellMo\"] <- 2\nhn_cm[\"8\", \"CellMo\"] <- 2\nhn_cm[\"10\", \"CellMo\"] <- 2 \n# hn_cm[\"20\", \"CellMo\"] <- 3\nhn_cm[\"19\", \"CellMo\"] <- 2 \n\nhn_cm$CellMo_f[hn_cm$CellMo <= 2.5] <- 0\nhn_cm$CellMo_f[hn_cm$CellMo > 2.5] <- 1\n\nhn_cm$CellMo_f <- as.factor(hn_cm$CellMo_f)\nsummary(hn_cm$CellMo_f)\n\nhn_cm$pathscore_f <- (hn_cm$pathscore==3)\nhn_cm$mix <- sprintf(\"%s_%s\", hn_cm$CellMo_f, hn_cm$pathscore_f)\nsummary(as.factor(hn_cm$mix))\n\n# visual of data\n# box-plot\nhn_cm$CellMo_t <- c(\"Low\", \"High\")[hn_cm$CellMo_f]\nhn.m <- melt(hn_cm, id.vars='CellMo_t', \n             measure.vars=c('SUVmean','ADCmean', 'SUVmax',\n                            \"Ktrans\", \"Ve\", \"Kep\"))\n# ggplot(hn.m) +\n#   geom_boxplot(aes(x=pathscore, y=value, color=variable))\np <- ggplot(data = hn.m, aes(x=variable, y=value)) + \n  geom_boxplot(aes(fill=CellMo_t))\np <- p + facet_wrap( ~ variable, scales=\"free\")\np <- p + scale_fill_manual(\n  values = c(\"blue\", \"red\"),\n  name = \"EGFR\",\n  labels = c(\"高表达\", \"低表达\")) \np <- p + theme(text = element_text(family = 'SimSun'))\n\n# p <- p + ggtitle(\"Boxplot of Pathological Score\")\np\n\nattach(hn_cm)\npar(mfrow=c(1,2))\nplot(SUVmean, KtransMean, col=c(\"red\", \"green\", \"blue\", \"purple\", \"yellow\")[pathscore], main=\"SUVav/KtransAv(PathScore)\")\ntext(SUVmean, KtransMean, labels = row.names(hn_c), cex = 0.8)\n\nplot(SUVmean, KtransMean, col=c(\"red\", \"green\", \"blue\", \"purple\", \"yellow\")[CellMo_f], main=\"SUVav/KtransAv(CellMo)\")\ntext(SUVmean, KtransMean, labels = row.names(hn_c), cex = 0.8)\ndetach(hn_cm)\n\n# shapiro.test(hn_cm$SUVmean)\n# ad.test(hn_cm$SUVmean)\n# qqnorm(hn_cm$SUVmean)\nks.test(hn_cm$SUVmean, rnorm(18))\nks.test(hn_cm$ADCmean, rnorm(18))\nks.test(hn_cm$SUVmax, rnorm(18))\nks.test(hn_cm$KtransMean, rnorm(18))\nks.test(hn_cm$KepMean, rnorm(18))\nks.test(hn_cm$VeMean, rnorm(18))\n\n# correlation\ncor.test(hn_cm$CellMo, hn_cm$SUVmean)\n# t.test(SUVmean ~ CellMo_f, data=hn_cm)\nwilcox.test(SUVmean ~ CellMo_f, data=hn_cm)\n\ncor.test(hn_cm$CellMo, hn_cm$SUVmax)\n# t.test(SUVmax ~ CellMo_f, data=hn_cm)\nwilcox.test(SUVmax ~ CellMo_f, data=hn_cm)\n\ncor.test(hn_cm$CellMo, hn_cm$ADCmean)\n# t.test(ADCmean ~ CellMo_f, data=hn_cm)\nwilcox.test(ADCmean ~ CellMo_f, data=hn_cm)\n\ncor.test(hn_cm$CellMo, hn_cm$KtransMean)\n# t.test(KtransMean ~ CellMo_f, data=hn_cm)\nwilcox.test(KtransMean ~ CellMo_f, data=hn_cm)\n\ncor.test(hn_cm$CellMo, hn_cm$KepMean)\n# t.test(KepMean ~ CellMo_f, data=hn_cm)\nwilcox.test(KepMean ~ CellMo_f, data=hn_cm)\n\ncor.test(hn_cm$CellMo, hn_cm$VeMean)\n# t.test(VeMean ~ CellMo_f, data=hn_cm)\nwilcox.test(VeMean ~ CellMo_f, data=hn_cm)\n\n# clear non-ktrans case\n# hn_cm <- hn_cm[!is.na(hn_cm$KtransMean), ]\n\n# a full regression\nfit <- glm(CellMo_f ~ SUVmean + ADCmean + VeMean + KtransMean + KepMean, \n           family=binomial(link = \"logit\"), hn_cm)\nvif(fit)\nsummary(fit)\nstep(fit)\npred <- predict(fit, hn_cm)\n\nfit0 <- glm(CellMo_f ~ SUVmean + KtransMean + KepMean + VeMean, \n            family=binomial(link = \"logit\"), hn_cm) # 0.7628\nvif(fit0)\nsummary(fit0)\n\npred0 <- predict(fit0, hn_cm)\n\n# traditional version\npar(mfrow=c(1,1), family = 'STKaiti')\n\n# SUVmean\nplot(roc(hn_cm$CellMo_f, hn_cm$SUVmean, direction=\"<\", smooth = FALSE),\n     col=\"blue\",  main=\"\", tck = 0.02, lwd=1,\n     xaxs = \"i\", yaxs=\"i\", \n     xlim = c(1, 0), ylim = c(0,1), \n     xlab = \"1-特异度(1-Specifity)\", ylab = \"敏感度(Sensitivity)\",\n     family='STKaiti', legacy.axes = TRUE)\nsuv <- roc_suite(hn_cm$CellMo_f, hn_cm$SUVmean)\n\n# ADCmean\nlines(roc(hn_cm$CellMo_f, hn_cm$ADCmean, direction=\"<\", smooth = FALSE),\n      col=\"red\", lwd=1)\nadc <- roc_suite(hn_cm$CellMo_f, hn_cm$ADCmean)\n\n# SUVmax\nlines(roc(hn_cm$CellMo_f, hn_cm$SUVmax, direction=\"<\", smooth = FALSE),\n      col=\"green\", lwd=1)\nsuvm <- roc_suite(hn_cm$CellMo_f, hn_cm$SUVmax)\n\n# VeAv\nlines(roc(hn_cm$CellMo_f, -hn_cm$VeMean, direction=\"<\", smooth = FALSE),\n      col=\"purple\", lwd=1)\nve <- roc_suite(hn_cm$CellMo_f, -hn_cm$VeMean)\n\n# KepAv\nlines(roc(hn_cm$CellMo_f, hn_cm$KepMean, direction=\"<\", smooth = FALSE),\n      col=\"darkcyan\", lwd=1)\nkep <- roc_suite(hn_cm$CellMo_f, hn_cm$KepMean)\n\n# KtransAv\nlines(roc(hn_cm$CellMo_f, -hn_cm$KtransMean, direction=\"<\", smooth = FALSE),\n      col=\"indianred4\", lwd=1)\ntrans <- roc_suite(hn_cm$CellMo_f, -hn_cm$KtransMean)\n\n# 组合\nlines(roc(hn_cm$CellMo_f, pred0, direction=\"<\", smooth = FALSE),\n      col=\"black\", lwd=1)\ncomb <- roc_suite(hn_cm$CellMo_f, pred0)\n\nlegend(\"bottomright\", legend = c(\"SUVmean\", \"ADCmean\", \"SUVmax\",\n                                 \"Ve\", \"Kep\", \"Trans\", \"组合\"),\n       lty = 1,  bty = \"n\", col=c(\"blue\", \"red\", \"green\", \"purple\", \n                      \"darkcyan\", \"indianred4\", \"black\"))\n\nmcnemar.test(comb$ptar, suv$ptar)\nmcnemar.test(comb$ptar, suvm$ptar)\nmcnemar.test(comb$ptar, adc$ptar)\nmcnemar.test(comb$ptar, ve$ptar)\nmcnemar.test(comb$ptar, kep$ptar)\nmcnemar.test(comb$ptar, trans$ptar)\n\n# table-1 confidence\nchisq.test(c(3, 0), p = c(12/21, 9/21))\nchisq.test(c(2, 5), p = c(12/21, 9/21))\nchisq.test(c(7, 4), p = c(12/21, 9/21))\n\nchisq.test(c(5, 2), p = c(12/21, 9/21))\nchisq.test(c(7, 7), p = c(12/21, 9/21))\n\nchisq.test(c(6, 6), p = c(12/21, 9/21))\nchisq.test(c(6, 3), p = c(12/21, 9/21))\n\nage1 <- c(\n61,\n58,\n53,\n50,\n61,\n82,\n57,\n54,\n64)\n\nage0 <- c(\n51,\n78,\n71,\n64,\n68,\n53,\n53,\n47,\n66,\n74,\n56,\n67)\n\nt.test(age0, age1)\n# game over, but we want something more...\n# cross-validation version\nntrain <- dim(hn_c)[1]\ngpred0 <- (1:ntrain)\ngpred1 <- (1:ntrain)\ngpred2 <- (1:ntrain)\ngpred3 <- (1:ntrain)\ngpred4 <- (1:ntrain)\ngpred5 <- (1:ntrain)\ngpred6 <- (1:ntrain)\ngpred7 <- (1:ntrain)\ngpred8 <- (1:ntrain)\n\nlibrary(\"rpart\")\nlibrary(\"rpart.plot\")\n\nfor(k in 1:ntrain) {\n  hn_trn <- hn_c[-k, ]\n  hn_tst <- hn_c[k, ]\n  fit0 <- glm(LN ~ SUVmax + ADCmean + VeAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7628\n  fit1 <- glm(LN ~ SUVmean + ADCmean + VeAv + KtransAv + KepAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.6667\n  fit2 <- glm(LN ~ SUVmean, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  fit3 <- glm(LN ~ ADCmean, \n              family=binomial(link = \"logit\"), hn_trn) # 0.6218\n  fit4 <- glm(LN ~ SUVmax, \n              family=binomial(link = \"logit\"), hn_trn) # 0.6859\n  fit5 <- glm(LN ~ VeAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  fit6 <- glm(LN ~ KepAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  fit7 <- glm(LN ~ KtransAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  # fit8 <- rpart(LN ~ SUVmean + ADCmean + KepAv + VeAv + IAUGCAv + KtransAv, \n  #               data=hn_trn, method=\"anova\", \n  #               control=rpart.control(minsplit=8, cp=0.01))\n  \n  # prediction\n  pred <- predict(fit0, newdata = hn_tst, type=c(\"response\"))\n  gpred0[k] <- pred[1]\n  pred <- predict(fit1, newdata = hn_tst, type=c(\"response\"))\n  gpred1[k] <- pred[1]\n  pred <- predict(fit2, newdata = hn_tst, type=c(\"response\"))\n  gpred2[k] <- pred[1]\n  pred <- predict(fit3, newdata = hn_tst, type=c(\"response\"))\n  gpred3[k] <- pred[1]\n  pred <- predict(fit4, newdata = hn_tst, type=c(\"response\"))\n  gpred4[k] <- pred[1]\n  pred <- predict(fit5, newdata = hn_tst, type=c(\"response\"))\n  gpred5[k] <- pred[1]\n  pred <- predict(fit6, newdata = hn_tst, type=c(\"response\"))\n  gpred6[k] <- pred[1]\n  pred <- predict(fit7, newdata = hn_tst, type=c(\"response\"))\n  gpred7[k] <- pred[1]\n  \n  # pred <- predict(fit6, hn_tst)\n  # gpred6[k] <- pred[1]\n}\n\npar(mfrow=c(1,1))\n\n# SUVmean\nplot(roc(hn_c$LN, gpred2, direction=\"<\", smooth = FALSE),\n     col=\"blue\", lwd=1, main=\"MR、PET、ADC及组合的ROC\", \n     xlab = \"特异度\", ylab = \"敏感度\", \n     family='STKaiti')\nsuv <- roc_suite(hn_c$LN, gpred2)\n\n# ADCmean\nlines(roc(hn_c$LN, gpred3, direction=\"<\", smooth = FALSE),\n      col=\"red\", lwd=1)\nadc <- roc_suite(hn_c$LN, gpred3)\n\n# SUVmax\nlines(roc(hn_c$LN, gpred4, direction=\"<\", smooth = FALSE),\n      col=\"green\", lwd=1)\nsuvm <- roc_suite(hn_c$LN, gpred4)\n\n# VeAv\nlines(roc(hn_c$LN, gpred5, direction=\"<\", smooth = FALSE),\n      col=\"purple\", lwd=1)\nve <- roc_suite(hn_c$LN, gpred5)\n\n# KepAv\nlines(roc(hn_c$LN, -gpred6, direction=\"<\", smooth = FALSE),\n      col=\"darkcyan\", lwd=1)\nkep <- roc_suite(hn_c$LN, -gpred6)\n\n# TransAv\nlines(roc(hn_c$LN, gpred7, direction=\"<\", smooth = FALSE),\n      col=\"indianred4\", lwd=1)\ntrans <- roc_suite(hn_c$LN, gpred7)\n\n# 组合\nlines(roc(hn_c$LN, gpred0, direction=\"<\", smooth = FALSE),\n      col=\"black\", lwd=1)\ncomb <- roc_suite(hn_c$LN, gpred0)\n\nlegend(\"bottomright\", legend = c(\"SUVmean\", \"ADCmean\", \"SUVmax\",\n                                 \"VeAv\", \"KepAv\", \"TransAv\", \"组合\"),\n       lty = 1, col=c(\"blue\", \"red\", \"green\", \"purple\", \n                      \"darkcyan\", \"indianred4\", \"black\"))\n",
    "created" : 1522495816517.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2002623043",
    "id" : "58199473",
    "lastKnownWriteTime" : 1523114942,
    "last_content_update" : 1523114942306,
    "path" : "~/Code/md_thesis/clin_neu_med_2018_cell.R",
    "project_path" : "clin_neu_med_2018_cell.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}