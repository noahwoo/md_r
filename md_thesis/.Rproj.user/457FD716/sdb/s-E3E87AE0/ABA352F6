{
    "collab_server" : "",
    "contents" : "require(xlsx)\nrequire(ROCR)\nlibrary(pROC)\nlibrary(car)\nlibrary(psych)\n\n# boxplot with ggplot2\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(nortest)\n\nroc_suite <- function(target, pred) {\n  roc   <- prediction(pred, target)\n  auc   <- performance(roc, \"auc\")@y.values[[1]]\n  perf  <- performance(roc, \"sens\", \"spec\")\n  perfv <- perf@x.values[[1]] + perf@y.values[[1]]\n  ix    <- which.max(perfv)\n  cutoff <- perf@alpha.values[[1]][ix]\n  sens  <- perf@y.values[[1]][ix] \n  spec  <- perf@x.values[[1]][ix]\n  \n  nppv  <- performance(roc, \"ppv\", \"npv\")\n  npv   <- nppv@x.values[[1]][ix]\n  ppv   <- nppv@y.values[[1]][ix]\n  \n  r0 <- roc(target, rep(0, length(target)))\n  r1 <- roc(target, pred, direction=\"<\", smooth = FALSE)\n  test <- roc.test(r0, r1) # significant test\n  ci   <- ci.auc(r1, method = c(\"bootstrap\"))\n  list(auc=auc, ix=ix, sens=sens, spec=spec, \n       npv=npv, ppv=ppv, youden=sens+spec-1, \n       cutoff=cutoff, pvalue=test$p.value,\n       ci_lb=ci[1][[1]], ci_ub=ci[3][[1]], \n       ptar=as.factor(pred>cutoff))\n}\n\n\n# clin-neu-med \nhn_raw <- read.xlsx(\"/Users/wujianmin/Documents/personal/lp/0916-HN/HN0917_V5.xlsx\", \n                    sheetName = \"LN-retest2\")\nnames(hn_raw)\nhn_raw <- hn_raw[1:44, ]\n# cleaning stuff\ncols <- c(\"LN\", \"SUVmean\", \"SUVmax\", \"ADCmean\", \"IAUGCAv\", \"KtransAv\", \"VeAv\", \"KepAv\")\nhn_c <- hn_raw[, cols] # project column\nhn_c <- hn_c[!is.na(hn_c$ADCmean), ]\nhn_c <- hn_c[!is.na(hn_c$KtransAv), ]\nsummary(as.factor(hn_c$LN))\n# clear problematic case\n# hn_c <- hn_c[-13, ] # remove Wang Zhengyang\n# hn_c <- hn_c[-19, ] # remove Xiang Xiaoyi\n# hn_c <- hn_c[-23, ] # remove An Zhanzu\n# hn_c <- hn_c[c(1:8, 10:12, 14, 16:18, 20:22, 24), ] # remove ALL\n# hn_c <- hn_c[c(1:12, 14:18, 20:22, 24), ] # remove ALL\n\n# some statistics\nmean(hn_c$SUVmean[hn_c$LN==0])\nmean(hn_c$SUVmean[hn_c$LN==1])\nsd(hn_c$SUVmean[hn_c$LN==0])\nsd(hn_c$SUVmean[hn_c$LN==1])\n\nmean(hn_c$SUVmax[hn_c$LN==0])\nmean(hn_c$SUVmax[hn_c$LN==1])\nsd(hn_c$SUVmax[hn_c$LN==0])\nsd(hn_c$SUVmax[hn_c$LN==1])\n\n\nmean(hn_c$ADCmean[hn_c$LN==0])\nmean(hn_c$ADCmean[hn_c$LN==1])\nsd(hn_c$ADCmean[hn_c$LN==0])\nsd(hn_c$ADCmean[hn_c$LN==1])\n\nmean(hn_c$KtransAv[hn_c$LN==0])\nmean(hn_c$KtransAv[hn_c$LN==1])\nsd(hn_c$KtransAv[hn_c$LN==0])\nsd(hn_c$KtransAv[hn_c$LN==1])\n\nmean(hn_c$VeAv[hn_c$LN==0])\nmean(hn_c$VeAv[hn_c$LN==1])\nsd(hn_c$VeAv[hn_c$LN==0])\nsd(hn_c$VeAv[hn_c$LN==1])\n\nmean(hn_c$KepAv[hn_c$LN==0])\nmean(hn_c$KepAv[hn_c$LN==1])\nsd(hn_c$KepAv[hn_c$LN==0])\nsd(hn_c$KepAv[hn_c$LN==1])\n\nchisq.test(c(0, 0), p = c(7/16, 9/16))\nchisq.test(c(4, 2), p = c(7/16, 9/16))\nchisq.test(c(2, 3), p = c(7/16, 9/16))\nchisq.test(c(1, 4), p = c(7/16, 9/16))\n\n\n# coorelation\ncor(hn_c[, cols[c(-1, -5)]], method=c(\"pearson\"))\ncor(hn_c[, cols[c(-1, -5)]], method=c(\"spearman\"))\n\ncor.test(hn_c[, \"SUVmean\"] , hn_c[, \"SUVmax\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"SUVmean\"] , hn_c[, \"ADCmean\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"SUVmean\"] , hn_c[, \"KtransAv\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"SUVmean\"] , hn_c[, \"VeAv\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"SUVmean\"] , hn_c[, \"KepAv\"],alternative = \"two.sided\", method=\"spearman\")\n\ncor.test(hn_c[, \"SUVmax\"] , hn_c[, \"ADCmean\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"SUVmax\"] , hn_c[, \"KtransAv\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"SUVmax\"] , hn_c[, \"VeAv\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"SUVmax\"] , hn_c[, \"KepAv\"],alternative = \"two.sided\", method=\"spearman\")\n\ncor.test(hn_c[, \"ADCmean\"] , hn_c[, \"KtransAv\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"ADCmean\"] , hn_c[, \"VeAv\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"ADCmean\"] , hn_c[, \"KepAv\"],alternative = \"two.sided\", method=\"spearman\")\n\ncor.test(hn_c[, \"KtransAv\"] , hn_c[, \"VeAv\"],alternative = \"two.sided\", method=\"spearman\")\ncor.test(hn_c[, \"KtransAv\"] , hn_c[, \"KepAv\"],alternative = \"two.sided\", method=\"spearman\")\n\ncor.test(hn_c[, \"VeAv\"] , hn_c[, \"KepAv\"],alternative = \"two.sided\", method=\"spearman\")\n\n# t-test and wilcox-test\nt.test(SUVmean ~ LN, data=hn_c)\nwilcox.test(SUVmean ~ LN, data=hn_c)\n\nt.test(SUVmax ~ LN, data=hn_c)\nwilcox.test(SUVmax ~ LN, data=hn_c)\n\nt.test(ADCmean ~ LN, data=hn_c)\nwilcox.test(ADCmean ~ LN, data=hn_c)\n\nt.test(IAUGCAv ~ LN, data=hn_c)\nwilcox.test(IAUGCAv ~ LN, data=hn_c)\n\nt.test(KtransAv ~ LN, data=hn_c)\nwilcox.test(KtransAv ~ LN, data=hn_c)\n\nt.test(VeAv ~ LN, data=hn_c)\nwilcox.test(VeAv ~ LN, data=hn_c)\n\nt.test(KepAv ~ LN, data=hn_c)\nwilcox.test(KepAv ~ LN, data=hn_c)\n\nhn_c$LNS <- c(\"NPT\", \"PT\")[hn_c$LN+1]\nhn_c$Ktrans <- hn_c$KtransAv\nhn_c$Ve <- hn_c$VeAv\nhn_c$Kep <- hn_c$KepAv\n\nhn.m <- melt(hn_c, id.vars='LNS', \n             measure.vars=c('SUVmean','SUVmax', 'ADCmean', 'Ktrans', 'Ve', 'Kep'))\n# vars_alias <- c('SUVmean','SUVmax', 'ADCmean', 'Ktrans', 'Ve', 'Kep')\n# ggplot(hn.m) +\n#   geom_boxplot(aes(x=pathscore, y=value, color=variable))\np <- ggplot(data = hn.m, aes(x=variable, y=value)) + \n  geom_boxplot(aes(fill=LNS))\np <- p + facet_wrap( ~ variable, scales=\"free\")\np <- p + scale_fill_manual(\n  values = c(\"blue\", \"red\"),\n  name = \"淋巴结\",\n  labels = c(\"非转移\", \"转移\"))\np <- p + theme(text = element_text(family = 'SimSun'))\np\n\n# a full regression\nfit <- glm(LN ~ SUVmean + ADCmean + VeAv + KtransAv + KepAv, \n            family=binomial(link = \"logit\"), hn_c)\nvif(fit)\nsummary(fit)\nstep(fit)\npred <- predict(fit, hn_c)\n\nfit0 <- glm(LN ~ SUVmax + ADCmean + VeAv, \n            family=binomial(link = \"logit\"), hn_c) # 0.7628\nvif(fit0)\nsummary(fit0)\n\npred0 <- predict(fit0, hn_c)\nsummary(pred0)\n\n# traditional version\npar(mfrow=c(1,1), family = 'STKaiti')\n\n# SUVmean\nplot(roc(hn_c$LN, hn_c$SUVmean, direction=\"<\", smooth = FALSE),\n     col=\"blue\", lwd=1, main=\"\", tck = 0.02,\n     xaxs = \"i\", yaxs=\"i\", \n     xlim = c(1, 0), ylim = c(0,1), \n     xlab = \"1-特异度(1-Specifity)\", ylab = \"敏感度(Sensitivity)\",\n     family='STKaiti', legacy.axes = TRUE)\nsuv <- roc_suite(hn_c$LN, hn_c$SUVmean)\n\n# ADCmean\nlines(roc(hn_c$LN, -hn_c$ADCmean, direction=\"<\", smooth = FALSE),\n      col=\"red\", lwd=1)\nadc <- roc_suite(hn_c$LN, -hn_c$ADCmean)\n\n# SUVmax\nlines(roc(hn_c$LN, hn_c$SUVmax, direction=\"<\", smooth = FALSE),\n      col=\"green\", lwd=1)\nsuvm <- roc_suite(hn_c$LN, hn_c$SUVmax)\n\n# VeAv\nlines(roc(hn_c$LN, hn_c$VeAv, direction=\"<\", smooth = FALSE),\n      col=\"purple\", lwd=1)\nve <- roc_suite(hn_c$LN, hn_c$VeAv)\n\n# KepAv\nlines(roc(hn_c$LN, hn_c$KepAv, direction=\"<\", smooth = FALSE),\n      col=\"darkcyan\", lwd=1)\nkep <- roc_suite(hn_c$LN, hn_c$KepAv)\n\n# KtransAv\nlines(roc(hn_c$LN, hn_c$KtransAv, direction=\"<\", smooth = FALSE),\n      col=\"indianred4\", lwd=1)\ntrans <- roc_suite(hn_c$LN, hn_c$KtransAv)\n\n# 组合\nlines(roc(hn_c$LN, pred, direction=\"<\", smooth = FALSE),\n      col=\"black\", lwd=1)\ncomb <- roc_suite(hn_c$LN, pred)\n\nlegend(\"bottomright\", legend = c(\"SUVmean\", \"ADCmean\", \"SUVmax\",\n                                 \"Ve\", \"Kep\", \"Ktrans\", \"组合\"),\n       lty = 1, bty = \"n\", col=c(\"blue\", \"red\", \"green\", \"purple\", \n                      \"darkcyan\", \"indianred4\", \"black\"))\n\n\nmcnemar.test(suv$ptar, suvm$ptar)\nmcnemar.test(suv$ptar, adc$ptar)\nmcnemar.test(suv$ptar, ve$ptar)\nmcnemar.test(suv$ptar, kep$ptar)\nmcnemar.test(suv$ptar, trans$ptar)\n\nmcnemar.test(suvm$ptar, adc$ptar)\nmcnemar.test(suvm$ptar, ve$ptar)\nmcnemar.test(suvm$ptar, kep$ptar)\nmcnemar.test(suvm$ptar, trans$ptar)\n\nmcnemar.test(adc$ptar, ve$ptar)\nmcnemar.test(adc$ptar, kep$ptar)\nmcnemar.test(adc$ptar, trans$ptar)\n\nmcnemar.test(ve$ptar, kep$ptar)\nmcnemar.test(ve$ptar, trans$ptar)\n\nmcnemar.test(kep$ptar, trans$ptar)\n\n# game over, but we want something more...\n# cross-validation version\nntrain <- dim(hn_c)[1]\ngpred0 <- (1:ntrain)\ngpred1 <- (1:ntrain)\ngpred2 <- (1:ntrain)\ngpred3 <- (1:ntrain)\ngpred4 <- (1:ntrain)\ngpred5 <- (1:ntrain)\ngpred6 <- (1:ntrain)\ngpred7 <- (1:ntrain)\ngpred8 <- (1:ntrain)\n\nlibrary(\"rpart\")\nlibrary(\"rpart.plot\")\n\nfor(k in 1:ntrain) {\n  hn_trn <- hn_c[-k, ]\n  hn_tst <- hn_c[k, ]\n  fit0 <- glm(LN ~ SUVmax + ADCmean + VeAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7628\n  fit1 <- glm(LN ~ SUVmean + ADCmean + VeAv + KtransAv + KepAv, \n             family=binomial(link = \"logit\"), hn_trn) # 0.6667\n  fit2 <- glm(LN ~ SUVmean, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  fit3 <- glm(LN ~ ADCmean, \n              family=binomial(link = \"logit\"), hn_trn) # 0.6218\n  fit4 <- glm(LN ~ SUVmax, \n              family=binomial(link = \"logit\"), hn_trn) # 0.6859\n  fit5 <- glm(LN ~ VeAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  fit6 <- glm(LN ~ KepAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  fit7 <- glm(LN ~ KtransAv, \n              family=binomial(link = \"logit\"), hn_trn) # 0.7371\n  # fit8 <- rpart(LN ~ SUVmean + ADCmean + KepAv + VeAv + IAUGCAv + KtransAv, \n  #               data=hn_trn, method=\"anova\", \n  #               control=rpart.control(minsplit=8, cp=0.01))\n  \n  # prediction\n  pred <- predict(fit0, newdata = hn_tst, type=c(\"response\"))\n  gpred0[k] <- pred[1]\n  pred <- predict(fit1, newdata = hn_tst, type=c(\"response\"))\n  gpred1[k] <- pred[1]\n  pred <- predict(fit2, newdata = hn_tst, type=c(\"response\"))\n  gpred2[k] <- pred[1]\n  pred <- predict(fit3, newdata = hn_tst, type=c(\"response\"))\n  gpred3[k] <- pred[1]\n  pred <- predict(fit4, newdata = hn_tst, type=c(\"response\"))\n  gpred4[k] <- pred[1]\n  pred <- predict(fit5, newdata = hn_tst, type=c(\"response\"))\n  gpred5[k] <- pred[1]\n  pred <- predict(fit6, newdata = hn_tst, type=c(\"response\"))\n  gpred6[k] <- pred[1]\n  pred <- predict(fit7, newdata = hn_tst, type=c(\"response\"))\n  gpred7[k] <- pred[1]\n  \n  # pred <- predict(fit6, hn_tst)\n  # gpred6[k] <- pred[1]\n}\n\npar(mfrow=c(1,1))\n\n# SUVmean\nplot(roc(hn_c$LN, gpred2, direction=\"<\", smooth = FALSE),\n     col=\"blue\", lwd=1, main=\"MR、PET、ADC及组合的ROC\", \n     xlab = \"特异度\", ylab = \"敏感度\", \n     family='STKaiti')\nsuv <- roc_suite(hn_c$LN, gpred2)\n\n# ADCmean\nlines(roc(hn_c$LN, gpred3, direction=\"<\", smooth = FALSE),\n      col=\"red\", lwd=1)\nadc <- roc_suite(hn_c$LN, gpred3)\n\n# SUVmax\nlines(roc(hn_c$LN, gpred4, direction=\"<\", smooth = FALSE),\n      col=\"green\", lwd=1)\nsuvm <- roc_suite(hn_c$LN, gpred4)\n\n# VeAv\nlines(roc(hn_c$LN, gpred5, direction=\"<\", smooth = FALSE),\n      col=\"purple\", lwd=1)\nve <- roc_suite(hn_c$LN, gpred5)\n\n# KepAv\nlines(roc(hn_c$LN, -gpred6, direction=\"<\", smooth = FALSE),\n      col=\"darkcyan\", lwd=1)\nkep <- roc_suite(hn_c$LN, -gpred6)\n\n# TransAv\nlines(roc(hn_c$LN, gpred7, direction=\"<\", smooth = FALSE),\n      col=\"indianred4\", lwd=1)\ntrans <- roc_suite(hn_c$LN, gpred7)\n\n# 组合\nlines(roc(hn_c$LN, gpred0, direction=\"<\", smooth = FALSE),\n      col=\"black\", lwd=1)\ncomb <- roc_suite(hn_c$LN, gpred0)\n\nlegend(\"bottomright\", legend = c(\"SUVmean\", \"ADCmean\", \"SUVmax\",\n                                 \"VeAv\", \"KepAv\", \"TransAv\", \"组合\"),\n       lty = 1, col=c(\"blue\", \"red\", \"green\", \"purple\", \n                      \"darkcyan\", \"indianred4\", \"black\"))\n\n\n#################\ns1 <- c(1,1,1,1,0,0,0,0,0,0,0)\ns2 <- c(1,0,1,1,1,1)\ns3 <- c(1,1,1,1,0,0,0,0,0,1,1,1,1)\ns4 <- c(0,1,0,0,0,1,0,0,0,0,1,1,0)\n\nt.test(s1, y = s2, paired=FALSE) # -2.08, 0.058\nt.test(s1, y = s3, paired=FALSE) # -1.21, 0.237\nt.test(s1, y = s4, paired=FALSE) # 0.276, 0.785\nt.test(s2, y = s3, paired=FALSE) # 1, 0.337\nt.test(s2, y = s4, paired=FALSE) # 2.46, 0.031\nt.test(s3, y = s4, paired=FALSE) # 1.58, 0.125\n",
    "created" : 1523075937311.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3644447181",
    "id" : "ABA352F6",
    "lastKnownWriteTime" : 1523202227,
    "last_content_update" : 1523202227719,
    "path" : "~/Code/md_thesis/clin_neu_med_2017_ln.R",
    "project_path" : "clin_neu_med_2017_ln.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}